"use strict";
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
exports.__esModule = true;
var emojic_1 = __importDefault(require("emojic"));
var prefix = '[advent-of-code-client]';
var logger = {
    log: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return console.log.apply(console, __spreadArray([prefix], args, false));
    },
    debug: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        if (process.env.AOC_DEBUG === 'true' || globalThis.aocDebug) {
            console.debug.apply(console, __spreadArray([prefix], args, false));
        }
    },
    error: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return console.error.apply(console, __spreadArray([prefix], args, false));
    },
    success: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return logger.log.apply(logger, __spreadArray(__spreadArray([], args, false), [emojic_1["default"].whiteCheckMark], false));
    },
    fail: function () {
        var args = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            args[_i] = arguments[_i];
        }
        return logger.log.apply(logger, __spreadArray(__spreadArray([], args, false), [emojic_1["default"].x], false));
    }
};
exports["default"] = logger;
//# sourceMappingURL=logger.js.map